// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: ProtoObject.proto
#ifndef GRPC_ProtoObject_2eproto__INCLUDED
#define GRPC_ProtoObject_2eproto__INCLUDED

#include "ProtoObject.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace ProtoObject {

class GameService final {
 public:
  static constexpr char const* service_full_name() {
    return "ProtoObject.GameService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    // Login/Save Service
    virtual ::grpc::Status TryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::ProtoObject::PlayerInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>> AsyncTryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>>(AsyncTryLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>> PrepareAsyncTryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>>(PrepareAsyncTryLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status TryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::ProtoObject::PlayerInfo* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>> AsyncTryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>>(AsyncTryRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>> PrepareAsyncTryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>>(PrepareAsyncTryRegisterRaw(context, request, cq));
    }
    virtual ::grpc::Status SetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::ProtoObject::Nickname* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::Nickname>> AsyncSetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::Nickname>>(AsyncSetNicknameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::Nickname>> PrepareAsyncSetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::Nickname>>(PrepareAsyncSetNicknameRaw(context, request, cq));
    }
    virtual ::grpc::Status Save(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSave(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSaveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSave(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSaveRaw(context, request, cq));
    }
    // Runtime Service
    // Sender 1:1
    std::unique_ptr< ::grpc::ClientWriterInterface< ::ProtoObject::Location>> SendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::ProtoObject::Location>>(SendLocationRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::Location>> AsyncSendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::Location>>(AsyncSendLocationRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::Location>> PrepareAsyncSendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::Location>>(PrepareAsyncSendLocationRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriterInterface< ::ProtoObject::RepBoolean>> SendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
      return std::unique_ptr< ::grpc::ClientWriterInterface< ::ProtoObject::RepBoolean>>(SendRepBooleanRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::RepBoolean>> AsyncSendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::RepBoolean>>(AsyncSendRepBooleanRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::RepBoolean>> PrepareAsyncSendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriterInterface< ::ProtoObject::RepBoolean>>(PrepareAsyncSendRepBooleanRaw(context, response, cq));
    }
    virtual ::grpc::Status SendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendEquipmentChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendEquipmentChangeRaw(context, request, cq));
    }
    virtual ::grpc::Status SendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendMapResourceChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendMapResourceChangeRaw(context, request, cq));
    }
    virtual ::grpc::Status SendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::google::protobuf::Empty* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> AsyncSendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(AsyncSendMapTransitionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>> PrepareAsyncSendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>>(PrepareAsyncSendMapTransitionRaw(context, request, cq));
    }
    // Broadcast 1:N
    std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::Location>> BroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::Location>>(BroadcastLocationRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Location>> AsyncBroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Location>>(AsyncBroadcastLocationRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Location>> PrepareAsyncBroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Location>>(PrepareAsyncBroadcastLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::RepBoolean>> BroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::RepBoolean>>(BroadcastRepBooleanRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::RepBoolean>> AsyncBroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::RepBoolean>>(AsyncBroadcastRepBooleanRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::RepBoolean>> PrepareAsyncBroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::RepBoolean>>(PrepareAsyncBroadcastRepBooleanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::Equipment>> BroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::Equipment>>(BroadcastEquipmentChangeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Equipment>> AsyncBroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Equipment>>(AsyncBroadcastEquipmentChangeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Equipment>> PrepareAsyncBroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Equipment>>(PrepareAsyncBroadcastEquipmentChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::ResourceChange>> BroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::ResourceChange>>(BroadcastMapResourceChangeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::ResourceChange>> AsyncBroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::ResourceChange>>(AsyncBroadcastMapResourceChangeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::ResourceChange>> PrepareAsyncBroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::ResourceChange>>(PrepareAsyncBroadcastMapResourceChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::MapTransition>> BroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReaderInterface< ::ProtoObject::MapTransition>>(BroadcastMapTransitionRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::MapTransition>> AsyncBroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::MapTransition>>(AsyncBroadcastMapTransitionRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::MapTransition>> PrepareAsyncBroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReaderInterface< ::ProtoObject::MapTransition>>(PrepareAsyncBroadcastMapTransitionRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      // Login/Save Service
      virtual void TryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void TryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, std::function<void(::grpc::Status)>) = 0;
      virtual void TryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname* request, ::ProtoObject::Nickname* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname* request, ::ProtoObject::Nickname* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void Save(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Save(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Runtime Service
      // Sender 1:1
      virtual void SendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::ClientWriteReactor< ::ProtoObject::Location>* reactor) = 0;
      virtual void SendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::ClientWriteReactor< ::ProtoObject::RepBoolean>* reactor) = 0;
      virtual void SendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      // Broadcast 1:N
      virtual void BroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::Location>* reactor) = 0;
      virtual void BroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::RepBoolean>* reactor) = 0;
      virtual void BroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::Equipment>* reactor) = 0;
      virtual void BroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::ResourceChange>* reactor) = 0;
      virtual void BroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::MapTransition>* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>* AsyncTryLoginRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>* PrepareAsyncTryLoginRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>* AsyncTryRegisterRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::PlayerInfo>* PrepareAsyncTryRegisterRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::Nickname>* AsyncSetNicknameRaw(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::ProtoObject::Nickname>* PrepareAsyncSetNicknameRaw(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSaveRaw(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSaveRaw(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::ProtoObject::Location>* SendLocationRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::ProtoObject::Location>* AsyncSendLocationRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::ProtoObject::Location>* PrepareAsyncSendLocationRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientWriterInterface< ::ProtoObject::RepBoolean>* SendRepBooleanRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::ProtoObject::RepBoolean>* AsyncSendRepBooleanRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncWriterInterface< ::ProtoObject::RepBoolean>* PrepareAsyncSendRepBooleanRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendEquipmentChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendEquipmentChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendMapResourceChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendMapResourceChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* AsyncSendMapTransitionRaw(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::google::protobuf::Empty>* PrepareAsyncSendMapTransitionRaw(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::ProtoObject::Location>* BroadcastLocationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Location>* AsyncBroadcastLocationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Location>* PrepareAsyncBroadcastLocationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::ProtoObject::RepBoolean>* BroadcastRepBooleanRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::RepBoolean>* AsyncBroadcastRepBooleanRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::RepBoolean>* PrepareAsyncBroadcastRepBooleanRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::ProtoObject::Equipment>* BroadcastEquipmentChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Equipment>* AsyncBroadcastEquipmentChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::Equipment>* PrepareAsyncBroadcastEquipmentChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::ProtoObject::ResourceChange>* BroadcastMapResourceChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::ResourceChange>* AsyncBroadcastMapResourceChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::ResourceChange>* PrepareAsyncBroadcastMapResourceChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientReaderInterface< ::ProtoObject::MapTransition>* BroadcastMapTransitionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::MapTransition>* AsyncBroadcastMapTransitionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) = 0;
    virtual ::grpc::ClientAsyncReaderInterface< ::ProtoObject::MapTransition>* PrepareAsyncBroadcastMapTransitionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status TryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::ProtoObject::PlayerInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>> AsyncTryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>>(AsyncTryLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>> PrepareAsyncTryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>>(PrepareAsyncTryLoginRaw(context, request, cq));
    }
    ::grpc::Status TryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::ProtoObject::PlayerInfo* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>> AsyncTryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>>(AsyncTryRegisterRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>> PrepareAsyncTryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>>(PrepareAsyncTryRegisterRaw(context, request, cq));
    }
    ::grpc::Status SetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::ProtoObject::Nickname* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::Nickname>> AsyncSetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::Nickname>>(AsyncSetNicknameRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::Nickname>> PrepareAsyncSetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::ProtoObject::Nickname>>(PrepareAsyncSetNicknameRaw(context, request, cq));
    }
    ::grpc::Status Save(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSave(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSaveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSave(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSaveRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::ProtoObject::Location>> SendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::ProtoObject::Location>>(SendLocationRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::Location>> AsyncSendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::Location>>(AsyncSendLocationRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::Location>> PrepareAsyncSendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::Location>>(PrepareAsyncSendLocationRaw(context, response, cq));
    }
    std::unique_ptr< ::grpc::ClientWriter< ::ProtoObject::RepBoolean>> SendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response) {
      return std::unique_ptr< ::grpc::ClientWriter< ::ProtoObject::RepBoolean>>(SendRepBooleanRaw(context, response));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::RepBoolean>> AsyncSendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::RepBoolean>>(AsyncSendRepBooleanRaw(context, response, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::RepBoolean>> PrepareAsyncSendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncWriter< ::ProtoObject::RepBoolean>>(PrepareAsyncSendRepBooleanRaw(context, response, cq));
    }
    ::grpc::Status SendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendEquipmentChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendEquipmentChangeRaw(context, request, cq));
    }
    ::grpc::Status SendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendMapResourceChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendMapResourceChangeRaw(context, request, cq));
    }
    ::grpc::Status SendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::google::protobuf::Empty* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> AsyncSendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(AsyncSendMapTransitionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>> PrepareAsyncSendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>>(PrepareAsyncSendMapTransitionRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::Location>> BroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::Location>>(BroadcastLocationRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Location>> AsyncBroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Location>>(AsyncBroadcastLocationRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Location>> PrepareAsyncBroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Location>>(PrepareAsyncBroadcastLocationRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::RepBoolean>> BroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::RepBoolean>>(BroadcastRepBooleanRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::RepBoolean>> AsyncBroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::RepBoolean>>(AsyncBroadcastRepBooleanRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::RepBoolean>> PrepareAsyncBroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::RepBoolean>>(PrepareAsyncBroadcastRepBooleanRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::Equipment>> BroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::Equipment>>(BroadcastEquipmentChangeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Equipment>> AsyncBroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Equipment>>(AsyncBroadcastEquipmentChangeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Equipment>> PrepareAsyncBroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::Equipment>>(PrepareAsyncBroadcastEquipmentChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::ResourceChange>> BroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::ResourceChange>>(BroadcastMapResourceChangeRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::ResourceChange>> AsyncBroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::ResourceChange>>(AsyncBroadcastMapResourceChangeRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::ResourceChange>> PrepareAsyncBroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::ResourceChange>>(PrepareAsyncBroadcastMapResourceChangeRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::MapTransition>> BroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) {
      return std::unique_ptr< ::grpc::ClientReader< ::ProtoObject::MapTransition>>(BroadcastMapTransitionRaw(context, request));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::MapTransition>> AsyncBroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::MapTransition>>(AsyncBroadcastMapTransitionRaw(context, request, cq, tag));
    }
    std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::MapTransition>> PrepareAsyncBroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncReader< ::ProtoObject::MapTransition>>(PrepareAsyncBroadcastMapTransitionRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void TryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, std::function<void(::grpc::Status)>) override;
      void TryLogin(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
      void TryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, std::function<void(::grpc::Status)>) override;
      void TryRegister(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname* request, ::ProtoObject::Nickname* response, std::function<void(::grpc::Status)>) override;
      void SetNickname(::grpc::ClientContext* context, const ::ProtoObject::Nickname* request, ::ProtoObject::Nickname* response, ::grpc::ClientUnaryReactor* reactor) override;
      void Save(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void Save(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendLocation(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::ClientWriteReactor< ::ProtoObject::Location>* reactor) override;
      void SendRepBoolean(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::ClientWriteReactor< ::ProtoObject::RepBoolean>* reactor) override;
      void SendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendEquipmentChange(::grpc::ClientContext* context, const ::ProtoObject::Equipment* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendMapResourceChange(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition* request, ::google::protobuf::Empty* response, std::function<void(::grpc::Status)>) override;
      void SendMapTransition(::grpc::ClientContext* context, const ::ProtoObject::MapTransition* request, ::google::protobuf::Empty* response, ::grpc::ClientUnaryReactor* reactor) override;
      void BroadcastLocation(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::Location>* reactor) override;
      void BroadcastRepBoolean(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::RepBoolean>* reactor) override;
      void BroadcastEquipmentChange(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::Equipment>* reactor) override;
      void BroadcastMapResourceChange(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::ResourceChange>* reactor) override;
      void BroadcastMapTransition(::grpc::ClientContext* context, const ::google::protobuf::Empty* request, ::grpc::ClientReadReactor< ::ProtoObject::MapTransition>* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>* AsyncTryLoginRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>* PrepareAsyncTryLoginRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>* AsyncTryRegisterRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ProtoObject::PlayerInfo>* PrepareAsyncTryRegisterRaw(::grpc::ClientContext* context, const ::ProtoObject::LoginInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ProtoObject::Nickname>* AsyncSetNicknameRaw(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::ProtoObject::Nickname>* PrepareAsyncSetNicknameRaw(::grpc::ClientContext* context, const ::ProtoObject::Nickname& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSaveRaw(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSaveRaw(::grpc::ClientContext* context, const ::ProtoObject::PlayerInfo& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::ProtoObject::Location>* SendLocationRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) override;
    ::grpc::ClientAsyncWriter< ::ProtoObject::Location>* AsyncSendLocationRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::ProtoObject::Location>* PrepareAsyncSendLocationRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientWriter< ::ProtoObject::RepBoolean>* SendRepBooleanRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response) override;
    ::grpc::ClientAsyncWriter< ::ProtoObject::RepBoolean>* AsyncSendRepBooleanRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncWriter< ::ProtoObject::RepBoolean>* PrepareAsyncSendRepBooleanRaw(::grpc::ClientContext* context, ::google::protobuf::Empty* response, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendEquipmentChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendEquipmentChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::Equipment& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendMapResourceChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendMapResourceChangeRaw(::grpc::ClientContext* context, const ::ProtoObject::ResourceChange& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* AsyncSendMapTransitionRaw(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::google::protobuf::Empty>* PrepareAsyncSendMapTransitionRaw(::grpc::ClientContext* context, const ::ProtoObject::MapTransition& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::ProtoObject::Location>* BroadcastLocationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::Location>* AsyncBroadcastLocationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::Location>* PrepareAsyncBroadcastLocationRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::ProtoObject::RepBoolean>* BroadcastRepBooleanRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::RepBoolean>* AsyncBroadcastRepBooleanRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::RepBoolean>* PrepareAsyncBroadcastRepBooleanRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::ProtoObject::Equipment>* BroadcastEquipmentChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::Equipment>* AsyncBroadcastEquipmentChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::Equipment>* PrepareAsyncBroadcastEquipmentChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::ProtoObject::ResourceChange>* BroadcastMapResourceChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::ResourceChange>* AsyncBroadcastMapResourceChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::ResourceChange>* PrepareAsyncBroadcastMapResourceChangeRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientReader< ::ProtoObject::MapTransition>* BroadcastMapTransitionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::MapTransition>* AsyncBroadcastMapTransitionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq, void* tag) override;
    ::grpc::ClientAsyncReader< ::ProtoObject::MapTransition>* PrepareAsyncBroadcastMapTransitionRaw(::grpc::ClientContext* context, const ::google::protobuf::Empty& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_TryLogin_;
    const ::grpc::internal::RpcMethod rpcmethod_TryRegister_;
    const ::grpc::internal::RpcMethod rpcmethod_SetNickname_;
    const ::grpc::internal::RpcMethod rpcmethod_Save_;
    const ::grpc::internal::RpcMethod rpcmethod_SendLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_SendRepBoolean_;
    const ::grpc::internal::RpcMethod rpcmethod_SendEquipmentChange_;
    const ::grpc::internal::RpcMethod rpcmethod_SendMapResourceChange_;
    const ::grpc::internal::RpcMethod rpcmethod_SendMapTransition_;
    const ::grpc::internal::RpcMethod rpcmethod_BroadcastLocation_;
    const ::grpc::internal::RpcMethod rpcmethod_BroadcastRepBoolean_;
    const ::grpc::internal::RpcMethod rpcmethod_BroadcastEquipmentChange_;
    const ::grpc::internal::RpcMethod rpcmethod_BroadcastMapResourceChange_;
    const ::grpc::internal::RpcMethod rpcmethod_BroadcastMapTransition_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    // Login/Save Service
    virtual ::grpc::Status TryLogin(::grpc::ServerContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response);
    virtual ::grpc::Status TryRegister(::grpc::ServerContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response);
    virtual ::grpc::Status SetNickname(::grpc::ServerContext* context, const ::ProtoObject::Nickname* request, ::ProtoObject::Nickname* response);
    virtual ::grpc::Status Save(::grpc::ServerContext* context, const ::ProtoObject::PlayerInfo* request, ::google::protobuf::Empty* response);
    // Runtime Service
    // Sender 1:1
    virtual ::grpc::Status SendLocation(::grpc::ServerContext* context, ::grpc::ServerReader< ::ProtoObject::Location>* reader, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendRepBoolean(::grpc::ServerContext* context, ::grpc::ServerReader< ::ProtoObject::RepBoolean>* reader, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendEquipmentChange(::grpc::ServerContext* context, const ::ProtoObject::Equipment* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendMapResourceChange(::grpc::ServerContext* context, const ::ProtoObject::ResourceChange* request, ::google::protobuf::Empty* response);
    virtual ::grpc::Status SendMapTransition(::grpc::ServerContext* context, const ::ProtoObject::MapTransition* request, ::google::protobuf::Empty* response);
    // Broadcast 1:N
    virtual ::grpc::Status BroadcastLocation(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::ProtoObject::Location>* writer);
    virtual ::grpc::Status BroadcastRepBoolean(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::ProtoObject::RepBoolean>* writer);
    virtual ::grpc::Status BroadcastEquipmentChange(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::ProtoObject::Equipment>* writer);
    virtual ::grpc::Status BroadcastMapResourceChange(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::ProtoObject::ResourceChange>* writer);
    virtual ::grpc::Status BroadcastMapTransition(::grpc::ServerContext* context, const ::google::protobuf::Empty* request, ::grpc::ServerWriter< ::ProtoObject::MapTransition>* writer);
  };
  template <class BaseClass>
  class WithAsyncMethod_TryLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TryLogin() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_TryLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLogin(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryLogin(::grpc::ServerContext* context, ::ProtoObject::LoginInfo* request, ::grpc::ServerAsyncResponseWriter< ::ProtoObject::PlayerInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_TryRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_TryRegister() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_TryRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryRegister(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryRegister(::grpc::ServerContext* context, ::ProtoObject::LoginInfo* request, ::grpc::ServerAsyncResponseWriter< ::ProtoObject::PlayerInfo>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SetNickname : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SetNickname() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_SetNickname() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNickname(::grpc::ServerContext* /*context*/, const ::ProtoObject::Nickname* /*request*/, ::ProtoObject::Nickname* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNickname(::grpc::ServerContext* context, ::ProtoObject::Nickname* request, ::grpc::ServerAsyncResponseWriter< ::ProtoObject::Nickname>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_Save : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Save() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_Save() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Save(::grpc::ServerContext* /*context*/, const ::ProtoObject::PlayerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSave(::grpc::ServerContext* context, ::ProtoObject::PlayerInfo* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendLocation() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_SendLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendLocation(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::Location>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendLocation(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::google::protobuf::Empty, ::ProtoObject::Location>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(4, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendRepBoolean() {
      ::grpc::Service::MarkMethodAsync(5);
    }
    ~WithAsyncMethod_SendRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendRepBoolean(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::RepBoolean>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendRepBoolean(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::google::protobuf::Empty, ::ProtoObject::RepBoolean>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(5, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendEquipmentChange() {
      ::grpc::Service::MarkMethodAsync(6);
    }
    ~WithAsyncMethod_SendEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendEquipmentChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::Equipment* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendEquipmentChange(::grpc::ServerContext* context, ::ProtoObject::Equipment* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendMapResourceChange() {
      ::grpc::Service::MarkMethodAsync(7);
    }
    ~WithAsyncMethod_SendMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapResourceChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::ResourceChange* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMapResourceChange(::grpc::ServerContext* context, ::ProtoObject::ResourceChange* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SendMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SendMapTransition() {
      ::grpc::Service::MarkMethodAsync(8);
    }
    ~WithAsyncMethod_SendMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapTransition(::grpc::ServerContext* /*context*/, const ::ProtoObject::MapTransition* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMapTransition(::grpc::ServerContext* context, ::ProtoObject::MapTransition* request, ::grpc::ServerAsyncResponseWriter< ::google::protobuf::Empty>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BroadcastLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BroadcastLocation() {
      ::grpc::Service::MarkMethodAsync(9);
    }
    ~WithAsyncMethod_BroadcastLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastLocation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Location>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastLocation(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::ProtoObject::Location>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BroadcastRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BroadcastRepBoolean() {
      ::grpc::Service::MarkMethodAsync(10);
    }
    ~WithAsyncMethod_BroadcastRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastRepBoolean(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::RepBoolean>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastRepBoolean(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::ProtoObject::RepBoolean>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BroadcastEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BroadcastEquipmentChange() {
      ::grpc::Service::MarkMethodAsync(11);
    }
    ~WithAsyncMethod_BroadcastEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastEquipmentChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Equipment>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastEquipmentChange(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::ProtoObject::Equipment>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(11, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BroadcastMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BroadcastMapResourceChange() {
      ::grpc::Service::MarkMethodAsync(12);
    }
    ~WithAsyncMethod_BroadcastMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapResourceChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::ResourceChange>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastMapResourceChange(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::ProtoObject::ResourceChange>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(12, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_BroadcastMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_BroadcastMapTransition() {
      ::grpc::Service::MarkMethodAsync(13);
    }
    ~WithAsyncMethod_BroadcastMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapTransition(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::MapTransition>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastMapTransition(::grpc::ServerContext* context, ::google::protobuf::Empty* request, ::grpc::ServerAsyncWriter< ::ProtoObject::MapTransition>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(13, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_TryLogin<WithAsyncMethod_TryRegister<WithAsyncMethod_SetNickname<WithAsyncMethod_Save<WithAsyncMethod_SendLocation<WithAsyncMethod_SendRepBoolean<WithAsyncMethod_SendEquipmentChange<WithAsyncMethod_SendMapResourceChange<WithAsyncMethod_SendMapTransition<WithAsyncMethod_BroadcastLocation<WithAsyncMethod_BroadcastRepBoolean<WithAsyncMethod_BroadcastEquipmentChange<WithAsyncMethod_BroadcastMapResourceChange<WithAsyncMethod_BroadcastMapTransition<Service > > > > > > > > > > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_TryLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TryLogin() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response) { return this->TryLogin(context, request, response); }));}
    void SetMessageAllocatorFor_TryLogin(
        ::grpc::MessageAllocator< ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TryLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLogin(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TryLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_TryRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_TryRegister() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ProtoObject::LoginInfo* request, ::ProtoObject::PlayerInfo* response) { return this->TryRegister(context, request, response); }));}
    void SetMessageAllocatorFor_TryRegister(
        ::grpc::MessageAllocator< ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_TryRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryRegister(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TryRegister(
      ::grpc::CallbackServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SetNickname : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SetNickname() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::ProtoObject::Nickname, ::ProtoObject::Nickname>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ProtoObject::Nickname* request, ::ProtoObject::Nickname* response) { return this->SetNickname(context, request, response); }));}
    void SetMessageAllocatorFor_SetNickname(
        ::grpc::MessageAllocator< ::ProtoObject::Nickname, ::ProtoObject::Nickname>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ProtoObject::Nickname, ::ProtoObject::Nickname>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SetNickname() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNickname(::grpc::ServerContext* /*context*/, const ::ProtoObject::Nickname* /*request*/, ::ProtoObject::Nickname* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetNickname(
      ::grpc::CallbackServerContext* /*context*/, const ::ProtoObject::Nickname* /*request*/, ::ProtoObject::Nickname* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_Save : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Save() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::ProtoObject::PlayerInfo, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ProtoObject::PlayerInfo* request, ::google::protobuf::Empty* response) { return this->Save(context, request, response); }));}
    void SetMessageAllocatorFor_Save(
        ::grpc::MessageAllocator< ::ProtoObject::PlayerInfo, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ProtoObject::PlayerInfo, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Save() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Save(::grpc::ServerContext* /*context*/, const ::ProtoObject::PlayerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Save(
      ::grpc::CallbackServerContext* /*context*/, const ::ProtoObject::PlayerInfo* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendLocation() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackClientStreamingHandler< ::ProtoObject::Location, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, ::google::protobuf::Empty* response) { return this->SendLocation(context, response); }));
    }
    ~WithCallbackMethod_SendLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendLocation(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::Location>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::ProtoObject::Location>* SendLocation(
      ::grpc::CallbackServerContext* /*context*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendRepBoolean() {
      ::grpc::Service::MarkMethodCallback(5,
          new ::grpc::internal::CallbackClientStreamingHandler< ::ProtoObject::RepBoolean, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, ::google::protobuf::Empty* response) { return this->SendRepBoolean(context, response); }));
    }
    ~WithCallbackMethod_SendRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendRepBoolean(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::RepBoolean>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::ProtoObject::RepBoolean>* SendRepBoolean(
      ::grpc::CallbackServerContext* /*context*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendEquipmentChange() {
      ::grpc::Service::MarkMethodCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::ProtoObject::Equipment, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ProtoObject::Equipment* request, ::google::protobuf::Empty* response) { return this->SendEquipmentChange(context, request, response); }));}
    void SetMessageAllocatorFor_SendEquipmentChange(
        ::grpc::MessageAllocator< ::ProtoObject::Equipment, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(6);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ProtoObject::Equipment, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendEquipmentChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::Equipment* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendEquipmentChange(
      ::grpc::CallbackServerContext* /*context*/, const ::ProtoObject::Equipment* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendMapResourceChange() {
      ::grpc::Service::MarkMethodCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::ProtoObject::ResourceChange, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ProtoObject::ResourceChange* request, ::google::protobuf::Empty* response) { return this->SendMapResourceChange(context, request, response); }));}
    void SetMessageAllocatorFor_SendMapResourceChange(
        ::grpc::MessageAllocator< ::ProtoObject::ResourceChange, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(7);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ProtoObject::ResourceChange, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapResourceChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::ResourceChange* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMapResourceChange(
      ::grpc::CallbackServerContext* /*context*/, const ::ProtoObject::ResourceChange* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SendMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SendMapTransition() {
      ::grpc::Service::MarkMethodCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::ProtoObject::MapTransition, ::google::protobuf::Empty>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::ProtoObject::MapTransition* request, ::google::protobuf::Empty* response) { return this->SendMapTransition(context, request, response); }));}
    void SetMessageAllocatorFor_SendMapTransition(
        ::grpc::MessageAllocator< ::ProtoObject::MapTransition, ::google::protobuf::Empty>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(8);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::ProtoObject::MapTransition, ::google::protobuf::Empty>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SendMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapTransition(::grpc::ServerContext* /*context*/, const ::ProtoObject::MapTransition* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMapTransition(
      ::grpc::CallbackServerContext* /*context*/, const ::ProtoObject::MapTransition* /*request*/, ::google::protobuf::Empty* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BroadcastLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BroadcastLocation() {
      ::grpc::Service::MarkMethodCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::ProtoObject::Location>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request) { return this->BroadcastLocation(context, request); }));
    }
    ~WithCallbackMethod_BroadcastLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastLocation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Location>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::ProtoObject::Location>* BroadcastLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BroadcastRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BroadcastRepBoolean() {
      ::grpc::Service::MarkMethodCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::ProtoObject::RepBoolean>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request) { return this->BroadcastRepBoolean(context, request); }));
    }
    ~WithCallbackMethod_BroadcastRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastRepBoolean(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::RepBoolean>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::ProtoObject::RepBoolean>* BroadcastRepBoolean(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BroadcastEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BroadcastEquipmentChange() {
      ::grpc::Service::MarkMethodCallback(11,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::ProtoObject::Equipment>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request) { return this->BroadcastEquipmentChange(context, request); }));
    }
    ~WithCallbackMethod_BroadcastEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastEquipmentChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Equipment>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::ProtoObject::Equipment>* BroadcastEquipmentChange(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BroadcastMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BroadcastMapResourceChange() {
      ::grpc::Service::MarkMethodCallback(12,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::ProtoObject::ResourceChange>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request) { return this->BroadcastMapResourceChange(context, request); }));
    }
    ~WithCallbackMethod_BroadcastMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapResourceChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::ResourceChange>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::ProtoObject::ResourceChange>* BroadcastMapResourceChange(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_BroadcastMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_BroadcastMapTransition() {
      ::grpc::Service::MarkMethodCallback(13,
          new ::grpc::internal::CallbackServerStreamingHandler< ::google::protobuf::Empty, ::ProtoObject::MapTransition>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::google::protobuf::Empty* request) { return this->BroadcastMapTransition(context, request); }));
    }
    ~WithCallbackMethod_BroadcastMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapTransition(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::MapTransition>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::ProtoObject::MapTransition>* BroadcastMapTransition(
      ::grpc::CallbackServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_TryLogin<WithCallbackMethod_TryRegister<WithCallbackMethod_SetNickname<WithCallbackMethod_Save<WithCallbackMethod_SendLocation<WithCallbackMethod_SendRepBoolean<WithCallbackMethod_SendEquipmentChange<WithCallbackMethod_SendMapResourceChange<WithCallbackMethod_SendMapTransition<WithCallbackMethod_BroadcastLocation<WithCallbackMethod_BroadcastRepBoolean<WithCallbackMethod_BroadcastEquipmentChange<WithCallbackMethod_BroadcastMapResourceChange<WithCallbackMethod_BroadcastMapTransition<Service > > > > > > > > > > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_TryLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TryLogin() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_TryLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLogin(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_TryRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_TryRegister() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_TryRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryRegister(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SetNickname : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SetNickname() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_SetNickname() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNickname(::grpc::ServerContext* /*context*/, const ::ProtoObject::Nickname* /*request*/, ::ProtoObject::Nickname* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_Save : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Save() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_Save() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Save(::grpc::ServerContext* /*context*/, const ::ProtoObject::PlayerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendLocation() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_SendLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendLocation(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::Location>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendRepBoolean() {
      ::grpc::Service::MarkMethodGeneric(5);
    }
    ~WithGenericMethod_SendRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendRepBoolean(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::RepBoolean>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendEquipmentChange() {
      ::grpc::Service::MarkMethodGeneric(6);
    }
    ~WithGenericMethod_SendEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendEquipmentChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::Equipment* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendMapResourceChange() {
      ::grpc::Service::MarkMethodGeneric(7);
    }
    ~WithGenericMethod_SendMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapResourceChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::ResourceChange* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SendMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SendMapTransition() {
      ::grpc::Service::MarkMethodGeneric(8);
    }
    ~WithGenericMethod_SendMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapTransition(::grpc::ServerContext* /*context*/, const ::ProtoObject::MapTransition* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BroadcastLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BroadcastLocation() {
      ::grpc::Service::MarkMethodGeneric(9);
    }
    ~WithGenericMethod_BroadcastLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastLocation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Location>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BroadcastRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BroadcastRepBoolean() {
      ::grpc::Service::MarkMethodGeneric(10);
    }
    ~WithGenericMethod_BroadcastRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastRepBoolean(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::RepBoolean>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BroadcastEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BroadcastEquipmentChange() {
      ::grpc::Service::MarkMethodGeneric(11);
    }
    ~WithGenericMethod_BroadcastEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastEquipmentChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Equipment>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BroadcastMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BroadcastMapResourceChange() {
      ::grpc::Service::MarkMethodGeneric(12);
    }
    ~WithGenericMethod_BroadcastMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapResourceChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::ResourceChange>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_BroadcastMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_BroadcastMapTransition() {
      ::grpc::Service::MarkMethodGeneric(13);
    }
    ~WithGenericMethod_BroadcastMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapTransition(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::MapTransition>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_TryLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TryLogin() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_TryLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLogin(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_TryRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_TryRegister() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_TryRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryRegister(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestTryRegister(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SetNickname : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SetNickname() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_SetNickname() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNickname(::grpc::ServerContext* /*context*/, const ::ProtoObject::Nickname* /*request*/, ::ProtoObject::Nickname* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSetNickname(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_Save : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Save() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_Save() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Save(::grpc::ServerContext* /*context*/, const ::ProtoObject::PlayerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSave(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendLocation() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_SendLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendLocation(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::Location>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendLocation(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(4, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendRepBoolean() {
      ::grpc::Service::MarkMethodRaw(5);
    }
    ~WithRawMethod_SendRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendRepBoolean(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::RepBoolean>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendRepBoolean(::grpc::ServerContext* context, ::grpc::ServerAsyncReader< ::grpc::ByteBuffer, ::grpc::ByteBuffer>* reader, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncClientStreaming(5, context, reader, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendEquipmentChange() {
      ::grpc::Service::MarkMethodRaw(6);
    }
    ~WithRawMethod_SendEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendEquipmentChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::Equipment* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendEquipmentChange(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(6, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendMapResourceChange() {
      ::grpc::Service::MarkMethodRaw(7);
    }
    ~WithRawMethod_SendMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapResourceChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::ResourceChange* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMapResourceChange(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(7, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SendMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SendMapTransition() {
      ::grpc::Service::MarkMethodRaw(8);
    }
    ~WithRawMethod_SendMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapTransition(::grpc::ServerContext* /*context*/, const ::ProtoObject::MapTransition* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSendMapTransition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(8, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BroadcastLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BroadcastLocation() {
      ::grpc::Service::MarkMethodRaw(9);
    }
    ~WithRawMethod_BroadcastLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastLocation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Location>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastLocation(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(9, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BroadcastRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BroadcastRepBoolean() {
      ::grpc::Service::MarkMethodRaw(10);
    }
    ~WithRawMethod_BroadcastRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastRepBoolean(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::RepBoolean>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastRepBoolean(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(10, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BroadcastEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BroadcastEquipmentChange() {
      ::grpc::Service::MarkMethodRaw(11);
    }
    ~WithRawMethod_BroadcastEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastEquipmentChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Equipment>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastEquipmentChange(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(11, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BroadcastMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BroadcastMapResourceChange() {
      ::grpc::Service::MarkMethodRaw(12);
    }
    ~WithRawMethod_BroadcastMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapResourceChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::ResourceChange>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastMapResourceChange(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(12, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_BroadcastMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_BroadcastMapTransition() {
      ::grpc::Service::MarkMethodRaw(13);
    }
    ~WithRawMethod_BroadcastMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapTransition(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::MapTransition>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestBroadcastMapTransition(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncWriter< ::grpc::ByteBuffer>* writer, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncServerStreaming(13, context, request, writer, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TryLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TryLogin() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TryLogin(context, request, response); }));
    }
    ~WithRawCallbackMethod_TryLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryLogin(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TryLogin(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_TryRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_TryRegister() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->TryRegister(context, request, response); }));
    }
    ~WithRawCallbackMethod_TryRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status TryRegister(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* TryRegister(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SetNickname : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SetNickname() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SetNickname(context, request, response); }));
    }
    ~WithRawCallbackMethod_SetNickname() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SetNickname(::grpc::ServerContext* /*context*/, const ::ProtoObject::Nickname* /*request*/, ::ProtoObject::Nickname* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SetNickname(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Save : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Save() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Save(context, request, response); }));
    }
    ~WithRawCallbackMethod_Save() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Save(::grpc::ServerContext* /*context*/, const ::ProtoObject::PlayerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Save(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendLocation() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->SendLocation(context, response); }));
    }
    ~WithRawCallbackMethod_SendLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendLocation(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::Location>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* SendLocation(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendRepBoolean() {
      ::grpc::Service::MarkMethodRawCallback(5,
          new ::grpc::internal::CallbackClientStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, ::grpc::ByteBuffer* response) { return this->SendRepBoolean(context, response); }));
    }
    ~WithRawCallbackMethod_SendRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendRepBoolean(::grpc::ServerContext* /*context*/, ::grpc::ServerReader< ::ProtoObject::RepBoolean>* /*reader*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerReadReactor< ::grpc::ByteBuffer>* SendRepBoolean(
      ::grpc::CallbackServerContext* /*context*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendEquipmentChange() {
      ::grpc::Service::MarkMethodRawCallback(6,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendEquipmentChange(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendEquipmentChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::Equipment* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendEquipmentChange(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendMapResourceChange() {
      ::grpc::Service::MarkMethodRawCallback(7,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendMapResourceChange(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapResourceChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::ResourceChange* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMapResourceChange(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SendMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SendMapTransition() {
      ::grpc::Service::MarkMethodRawCallback(8,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SendMapTransition(context, request, response); }));
    }
    ~WithRawCallbackMethod_SendMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SendMapTransition(::grpc::ServerContext* /*context*/, const ::ProtoObject::MapTransition* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SendMapTransition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BroadcastLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BroadcastLocation() {
      ::grpc::Service::MarkMethodRawCallback(9,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->BroadcastLocation(context, request); }));
    }
    ~WithRawCallbackMethod_BroadcastLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastLocation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Location>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* BroadcastLocation(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BroadcastRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BroadcastRepBoolean() {
      ::grpc::Service::MarkMethodRawCallback(10,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->BroadcastRepBoolean(context, request); }));
    }
    ~WithRawCallbackMethod_BroadcastRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastRepBoolean(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::RepBoolean>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* BroadcastRepBoolean(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BroadcastEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BroadcastEquipmentChange() {
      ::grpc::Service::MarkMethodRawCallback(11,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->BroadcastEquipmentChange(context, request); }));
    }
    ~WithRawCallbackMethod_BroadcastEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastEquipmentChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Equipment>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* BroadcastEquipmentChange(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BroadcastMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BroadcastMapResourceChange() {
      ::grpc::Service::MarkMethodRawCallback(12,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->BroadcastMapResourceChange(context, request); }));
    }
    ~WithRawCallbackMethod_BroadcastMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapResourceChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::ResourceChange>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* BroadcastMapResourceChange(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_BroadcastMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_BroadcastMapTransition() {
      ::grpc::Service::MarkMethodRawCallback(13,
          new ::grpc::internal::CallbackServerStreamingHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const::grpc::ByteBuffer* request) { return this->BroadcastMapTransition(context, request); }));
    }
    ~WithRawCallbackMethod_BroadcastMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status BroadcastMapTransition(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::MapTransition>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerWriteReactor< ::grpc::ByteBuffer>* BroadcastMapTransition(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TryLogin : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TryLogin() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>* streamer) {
                       return this->StreamedTryLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TryLogin() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TryLogin(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTryLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ProtoObject::LoginInfo,::ProtoObject::PlayerInfo>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_TryRegister : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_TryRegister() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ProtoObject::LoginInfo, ::ProtoObject::PlayerInfo>* streamer) {
                       return this->StreamedTryRegister(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_TryRegister() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status TryRegister(::grpc::ServerContext* /*context*/, const ::ProtoObject::LoginInfo* /*request*/, ::ProtoObject::PlayerInfo* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedTryRegister(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ProtoObject::LoginInfo,::ProtoObject::PlayerInfo>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SetNickname : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SetNickname() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ProtoObject::Nickname, ::ProtoObject::Nickname>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ProtoObject::Nickname, ::ProtoObject::Nickname>* streamer) {
                       return this->StreamedSetNickname(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SetNickname() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SetNickname(::grpc::ServerContext* /*context*/, const ::ProtoObject::Nickname* /*request*/, ::ProtoObject::Nickname* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSetNickname(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ProtoObject::Nickname,::ProtoObject::Nickname>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Save : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Save() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ProtoObject::PlayerInfo, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ProtoObject::PlayerInfo, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSave(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Save() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Save(::grpc::ServerContext* /*context*/, const ::ProtoObject::PlayerInfo* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSave(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ProtoObject::PlayerInfo,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendEquipmentChange() {
      ::grpc::Service::MarkMethodStreamed(6,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ProtoObject::Equipment, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ProtoObject::Equipment, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendEquipmentChange(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendEquipmentChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::Equipment* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendEquipmentChange(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ProtoObject::Equipment,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendMapResourceChange() {
      ::grpc::Service::MarkMethodStreamed(7,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ProtoObject::ResourceChange, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ProtoObject::ResourceChange, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendMapResourceChange(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendMapResourceChange(::grpc::ServerContext* /*context*/, const ::ProtoObject::ResourceChange* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendMapResourceChange(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ProtoObject::ResourceChange,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SendMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SendMapTransition() {
      ::grpc::Service::MarkMethodStreamed(8,
        new ::grpc::internal::StreamedUnaryHandler<
          ::ProtoObject::MapTransition, ::google::protobuf::Empty>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::ProtoObject::MapTransition, ::google::protobuf::Empty>* streamer) {
                       return this->StreamedSendMapTransition(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SendMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SendMapTransition(::grpc::ServerContext* /*context*/, const ::ProtoObject::MapTransition* /*request*/, ::google::protobuf::Empty* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSendMapTransition(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::ProtoObject::MapTransition,::google::protobuf::Empty>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_TryLogin<WithStreamedUnaryMethod_TryRegister<WithStreamedUnaryMethod_SetNickname<WithStreamedUnaryMethod_Save<WithStreamedUnaryMethod_SendEquipmentChange<WithStreamedUnaryMethod_SendMapResourceChange<WithStreamedUnaryMethod_SendMapTransition<Service > > > > > > > StreamedUnaryService;
  template <class BaseClass>
  class WithSplitStreamingMethod_BroadcastLocation : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_BroadcastLocation() {
      ::grpc::Service::MarkMethodStreamed(9,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::ProtoObject::Location>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::ProtoObject::Location>* streamer) {
                       return this->StreamedBroadcastLocation(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_BroadcastLocation() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BroadcastLocation(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Location>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedBroadcastLocation(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::ProtoObject::Location>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_BroadcastRepBoolean : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_BroadcastRepBoolean() {
      ::grpc::Service::MarkMethodStreamed(10,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::ProtoObject::RepBoolean>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::ProtoObject::RepBoolean>* streamer) {
                       return this->StreamedBroadcastRepBoolean(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_BroadcastRepBoolean() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BroadcastRepBoolean(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::RepBoolean>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedBroadcastRepBoolean(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::ProtoObject::RepBoolean>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_BroadcastEquipmentChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_BroadcastEquipmentChange() {
      ::grpc::Service::MarkMethodStreamed(11,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::ProtoObject::Equipment>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::ProtoObject::Equipment>* streamer) {
                       return this->StreamedBroadcastEquipmentChange(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_BroadcastEquipmentChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BroadcastEquipmentChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::Equipment>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedBroadcastEquipmentChange(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::ProtoObject::Equipment>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_BroadcastMapResourceChange : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_BroadcastMapResourceChange() {
      ::grpc::Service::MarkMethodStreamed(12,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::ProtoObject::ResourceChange>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::ProtoObject::ResourceChange>* streamer) {
                       return this->StreamedBroadcastMapResourceChange(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_BroadcastMapResourceChange() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BroadcastMapResourceChange(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::ResourceChange>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedBroadcastMapResourceChange(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::ProtoObject::ResourceChange>* server_split_streamer) = 0;
  };
  template <class BaseClass>
  class WithSplitStreamingMethod_BroadcastMapTransition : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithSplitStreamingMethod_BroadcastMapTransition() {
      ::grpc::Service::MarkMethodStreamed(13,
        new ::grpc::internal::SplitServerStreamingHandler<
          ::google::protobuf::Empty, ::ProtoObject::MapTransition>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerSplitStreamer<
                     ::google::protobuf::Empty, ::ProtoObject::MapTransition>* streamer) {
                       return this->StreamedBroadcastMapTransition(context,
                         streamer);
                  }));
    }
    ~WithSplitStreamingMethod_BroadcastMapTransition() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status BroadcastMapTransition(::grpc::ServerContext* /*context*/, const ::google::protobuf::Empty* /*request*/, ::grpc::ServerWriter< ::ProtoObject::MapTransition>* /*writer*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with split streamed
    virtual ::grpc::Status StreamedBroadcastMapTransition(::grpc::ServerContext* context, ::grpc::ServerSplitStreamer< ::google::protobuf::Empty,::ProtoObject::MapTransition>* server_split_streamer) = 0;
  };
  typedef WithSplitStreamingMethod_BroadcastLocation<WithSplitStreamingMethod_BroadcastRepBoolean<WithSplitStreamingMethod_BroadcastEquipmentChange<WithSplitStreamingMethod_BroadcastMapResourceChange<WithSplitStreamingMethod_BroadcastMapTransition<Service > > > > > SplitStreamedService;
  typedef WithStreamedUnaryMethod_TryLogin<WithStreamedUnaryMethod_TryRegister<WithStreamedUnaryMethod_SetNickname<WithStreamedUnaryMethod_Save<WithStreamedUnaryMethod_SendEquipmentChange<WithStreamedUnaryMethod_SendMapResourceChange<WithStreamedUnaryMethod_SendMapTransition<WithSplitStreamingMethod_BroadcastLocation<WithSplitStreamingMethod_BroadcastRepBoolean<WithSplitStreamingMethod_BroadcastEquipmentChange<WithSplitStreamingMethod_BroadcastMapResourceChange<WithSplitStreamingMethod_BroadcastMapTransition<Service > > > > > > > > > > > > StreamedService;
};

}  // namespace ProtoObject


#endif  // GRPC_ProtoObject_2eproto__INCLUDED
